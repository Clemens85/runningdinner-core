<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.runningdinner</groupId>
  <artifactId>runningdinner-core</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>runningdinner-core</name>
  <url>https://github.com/Clemens85/runningdinner-core</url>
  <developers>
  	<developer>
  		<name>Clemens Stich</name>
  		<email>ClemensStich@web.de</email>
  	</developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <hibernate.version>3.6.8.Final</hibernate.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    
   	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.1</version>
	</dependency>
	<dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>
    
   	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi</artifactId>
		<version>3.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-ooxml</artifactId>
		<version>3.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-scratchpad</artifactId>
		<version>3.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-ooxml-schemas</artifactId>
		<version>3.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>openxml4j</artifactId>
		<version>1.0-beta</version>
		<exclusions>
			<exclusion>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
    
    <!-- Both JPA/Hibernate and Jackson are needed for annotating some core classes, but the dependencies must be provided by consumer-modules -->
    <dependency>
    	<groupId>org.hibernate.javax.persistence</groupId>
    	<artifactId>hibernate-jpa-2.0-api</artifactId>
    	<version>1.0.1.Final</version>
    	<scope>provided</scope>
    	<optional>true</optional>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
	 	<version>${hibernate.version}</version>
	 	 <exclusions>
  			<exclusion>
  				<groupId>org.slf4j</groupId>
  				<artifactId>slf4j-api</artifactId>
  			</exclusion>
  		</exclusions>
  		<optional>true</optional>
	</dependency>
	<dependency>
    	<groupId>org.codehaus.jackson</groupId>
    	<artifactId>jackson-mapper-asl</artifactId>
    	<version>1.9.10</version>
    	<optional>true</optional>
	</dependency>
    
   	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.5</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.0.1</version>
		<scope>test</scope>
	</dependency>
    
  </dependencies>
  
  
  	<build>
		<plugins>
            <plugin>
         		<groupId>org.apache.maven.plugins</groupId>
         		<artifactId>maven-jar-plugin</artifactId>
         		<executions>
           			<execution>
             			<goals>
               				<goal>test-jar</goal>
             			</goals>
           			</execution>
         		</executions>
      		</plugin>
    	</plugins>
    </build>		
  
  
</project>